tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v1.0.0/custom_types.yaml

description: Deploy Prometheus + Grafana on top of a Kubernetes Virtual Cluster.

metadata:
  template_version: "1.1.0"
  template_name: Prometheus
  display_name: Deploy Prometheus + Grafana  on top of a Kubernetes Virtual Cluster
  icon: images/prometheus.png
  tabs:
    Grafana Data: .*
  parents:
    - kubernetes.yaml
    - oscar.yaml

topology_template:
  inputs:

    admin_password:
      type: string
      description: Password of the Grafana admin user (user admin)
      default: adminpass


  node_templates:

    prometheus:
      type: tosca.nodes.indigo.Helm.Chart
      properties:
        namespace: prometheus
        repository_name: prometheus-community
        repository_url: "https://prometheus-community.github.io/helm-charts"
        name: kube-prometheus-stack
        values_file: |
          grafana:
            ingress:
              enabled: true
              ingressClassName: nginx
              path: '/grafana'
            grafana.ini:
              server:
                root_url: '%(protocol)s://%(domain)s:%(http_port)s/grafana/'
                serve_from_sub_path: true
          prometheus:
            prometheusSpec:
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    accessModes: ['ReadWriteOnce']
                    resources:
                      requests:
                        storage: 20Gi
        values:
          grafana.adminPassword: { get_input: admin_password }
      requirements:
        - host: front
        - dependency: lrms_front_end

  outputs:
    grafana_endpoint:
      value: { concat: [ 'https://', get_attribute: [ front, public_address, 0 ], '/grafana/' ] }
