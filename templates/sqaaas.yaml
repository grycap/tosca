tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v1.0.0/custom_types.yaml

description: Deploy the EOSC-Synergy SQAaaS platform on top of a Kubernetes Virtual Cluster

metadata:
  template_name: SQAaaS
  template_version: "0.1.0"
  display_name: Deploy EOSC-Synergy SQAaaS platform on top of a Kubernetes Virtual Cluster
  icon: images/sqaaas.png
  tag: deprecated
  tag_color: grey
  tabs:
    HW Data:
      - wn_num
      - fe_cpus
      - fe_mem
      - fe_instance_type
      - wn_cpus
      - wn_mem
      - wn_instance_type
      - disk_size
      - volume_id
    Kubernetes Data: kube_.*
    SQAaaS Data: sqaaas_.*


topology_template:
  inputs:
    wn_num:
      type: integer
      description: Number of WNs in the cluster
      default: 1
      required: yes
    fe_cpus:
      type: integer
      description: Number of CPUs for the front-end node
      default: 2
      required: yes
      constraints:
        - valid_values: [ 2, 4, 8, 16, 32, 64 ]
    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 4 GB
      required: yes
      constraints:
        - valid_values: [ 4 GB, 8 GB, 16 GB, 32 GB, 64 GB, 128 GB, 256 GB, 512 GB ]
    fe_instance_type:
      type: string
      description: Flavor name of the front-end node
      default: ""
    wn_cpus:
      type: integer
      description: Number of CPUs for the WNs
      default: 2
      required: yes
      constraints:
        - valid_values: [ 2, 4, 8, 16, 32, 64 ]
    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 4 GB
      required: yes
      constraints:
        - valid_values: [ 4 GB, 8 GB, 16 GB, 32 GB, 64 GB, 128 GB, 256 GB, 512 GB ]
    wn_instance_type:
      type: string
      description: Flavor name for the WNs
      default: ""
    disk_size:
      type: scalar-unit.size
      description: Size of the disk to be attached to the FE instance
      default: 10 GB
      constraints:
        - valid_values: [ 10 GB, 20 GB, 50 GB, 100 GB, 200 GB, 500 GB, 1 TB, 2 TB ]
    volume_id:
      type: string
      description: "Or URL of the disk to be attached to the instance (format: ost://api.cloud.ifca.es/<vol_id>"
      default: ""

    kube_admin_token:
      type: string
      description: Access Token for the Kubernetes admin user
      default: not_very_secret_token
    kube_version:
      type: string
      description: Version of Kubernetes to install
      default: "1.20.6"
      constraints:
        - valid_values: [ "1.20.6", "1.19.10", "1.18.19", "1.21.0" ]
    kube_cert_manager:
      type: boolean
      description: Flag to install Cert-Manager and manage the generation of TLS certificas with Let's Encrypt
      default: false
      constraints:
        - valid_values: [ false, true ]
    kube_cert_user_email:
      type: string
      description: Email to be used in the Let's Encrypt issuer
      default: "jhondoe@server.com"

    sqaaas_jk_token:
      type: string
      description: Jenkins API token
      default: ""
      required: yes
    sqaaas_gh_token:
      type: string
      description: GitHub API token
      default: ""

    sqaaas_jenkins_url:
      type: string
      description: Jenkins URL endpoint
      default: "https://jenkins.eosc-synergy.eu/"
    sqaaas_jenkins_admin:
      type: string
      description: Jenkins user with admin permissions
      default: "admin"
    sqaaas_jenkins_github_org_name:
      type: string
      description: Name in Jenkins of the base repository organization
      default: "eosc-synergy-org"
    sqaaas_github_org:
      type: string
      description: GitHub organization name
      default: "eosc-synergy"
    sqaaas_install_badgr:
      type: boolean
      description: Flag to set the Badgr server to be installed
      default: false
      constraints:
        - valid_values: [ false, true ]

  node_templates:

    sqaaas:
      type: tosca.nodes.SoftwareComponent
      requirements:
        - host: front
        - dependency: lrms_front_end
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v1.0.0/artifacts/sqaaas_install.yml
            inputs:
              sqaaas_jk_token: { get_input: sqaaas_jk_token }
              sqaaas_gh_token: { get_input: sqaaas_gh_token }
              sqaaas_repo_type: "github"
              sqaaas_jenkins_url: { get_input: sqaaas_jenkins_url }
              sqaaas_jenkins_admin: { get_input: sqaaas_jenkins_admin }
              sqaaas_jenkins_github_org_name: { get_input: sqaaas_jenkins_github_org_name }
              sqaaas_github_org: { get_input: sqaaas_github_org }
              install_badgr: { get_input: sqaaas_install_badgr }

    lrms_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Kubernetes
      capabilities:
        endpoint:
          properties:
            ports:
              https_port:
                protocol: tcp
                source: 443
              kube_port:
                protocol: tcp
                source: 6443
              badrgapi_port:
                protocol: tcp
                source: 8443
      properties:
        admin_username: kubeuser
        install_nfs_client: true
        admin_token: { get_input: kube_admin_token }
        install_kubeapps: false
        version: { get_input: kube_version }
        nvidia_support: false
        cert_manager: { get_input: kube_cert_manager }
        cert_user_email: { get_input: kube_cert_user_email }
      requirements:
        - host: front

    front:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: kubeserver
            network_name: PUBLIC
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
            instance_type: { get_input: fe_instance_type }
        os:
          properties:
            distribution: ubuntu
            type: linux
      requirements:
        - local_storage:
            node: fe_block_storage
            relationship:
              type: AttachesTo
              properties:
                location: /pv

    fe_block_storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: disk_size }
        volume_id: { get_input: volume_id }

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Kubernetes
      properties:
        front_end_ip: { get_attribute: [ front, private_address, 0 ] }
        version: { get_input: kube_version }
        nvidia_support: false
      requirements:
        - host: wn

    wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: { get_input: wn_num }
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
            instance_type: { get_input: wn_instance_type }
        os:
          properties:
            distribution: ubuntu
            type: linux

  outputs:
    sqaaas_api_endpoint:
      value: { concat: [ 'https://', get_attribute: [ front, public_address, 0 ], '/sqaaas/v1/' ] }
    sqaaas_web_endpoint:
      value: { concat: [ 'https://', get_attribute: [ front, public_address, 0 ], '/sqaaas-web/' ] }
    kubernetes_dashboard_endpoint:
      value: { concat: [ 'https://', get_attribute: [ front, public_address, 0 ], '/dashboard/' ] }
    badgr_web_endpoint:
      value: { concat: [ 'https://', get_attribute: [ front, public_address, 0 ], '/badgr/' ] }
    badgr_api_endpoint:
      value: { concat: [ 'https://', get_attribute: [ front, public_address, 0 ], ':8443' ] }
