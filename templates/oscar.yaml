tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/main/custom_types.yaml

description: Deploy an OSCAR Virtual Cluster.

metadata:
  template_name: OSCAR
  template_version: "1.3.0"
  display_name: Deploy an OSCAR Virtual Cluster
  icon: images/oscar.png
  order: 2
  web: https://oscar.grycap.net
  tabs:
    HW Data:
      - wn_num
      - fe_cpus
      - fe_mem
      - fe_instance_type
      - wn_cpus
      - wn_mem
      - wn_disk_size
      - wn_instance_type
      - storage_size
    OSCAR Data:
      - admin_token
      - oscar_password
      - minio_password
      - cert_user_email
      - user_id:
          tag_type: userid
      - selected_vos
      - oidc_issuers
      - cluster_name:
          tag_type: random
      - domain_name:
          tag_type: hidden
      - kube_nvidia_support
      - kube_install_yunikorn
      - allowed_image_prefixes
  childs:
    - oscar_elastic.yaml
    - oscar_function.yaml
    - prometheus.yaml
    - registry.yaml
    - nodered.yaml
    - kafka.yaml
    - nifi.yaml

topology_template:
  inputs:
    wn_num:
      type: integer
      description: Number of WNs in the OSCAR cluster
      default: 1
      required: yes
    fe_cpus:
      type: integer
      description: Number of CPUs for the front-end node
      default: 4
      required: yes
      constraints:
        - valid_values: [ 4, 8, 16, 32, 64 ]
    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 4 GiB
      required: yes
      constraints:
        - valid_values: [ 4 GiB, 8 GiB, 16 GiB, 32 GiB, 64 GiB, 128 GiB, 256 GiB, 512 GiB ]
    fe_instance_type:
      type: string
      description: Flavor name of the front-end node. Only required in case of special flavors (i.e. with GPUs)
      default: ""
    wn_cpus:
      type: integer
      description: Number of CPUs for the WNs
      default: 2
      required: yes
      constraints:
        - valid_values: [ 2, 4, 8, 16, 32, 64 ]
    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 4 GiB
      required: yes
      constraints:
        - valid_values: [ 4 GiB, 8 GiB, 16 GiB, 32 GiB, 64 GiB, 128 GiB, 256 GiB, 512 GiB ]
    wn_disk_size:
      type: scalar-unit.size
      description: Size of the root disk of the WNs
      default: 20 GiB
      constraints:
        - valid_values: [ 20 GiB, 50 GiB, 100 GiB, 200 GiB ]
    wn_instance_type:
      type: string
      description: Flavor name of the WN node. Only required in case of special flavors (i.e. with GPUs)
      default: ""

    storage_size:
      type: string
      description: Size of the extra HD added to the front-end node
      default: 50 GiB
      required: yes
      constraints:
        - valid_values: [ 30 GiB, 50 GiB, 100 GiB ]

    admin_token:
      type: string
      description: Access Token for the Kubernetes admin user
      default: not_very_secret_token
    oscar_password:
      type: string
      description: OSCAR password
      default: oscar123
    minio_password:
      type: string
      description: MinIO password (8 characters min.)
      default: minio123
      constraints:
        - min_length: 8
    cert_user_email:
      type: string
      description: Email to be used in the Let's Encrypt issuer
      default: "jhondoe@server.com"
    user_id:
      type: string
      description: ID of the user that creates the infrastructure
      default: ""
    oidc_issuers:
      type: list
      description: OIDC issuers to support
      entry_schema:
        type: string
      default: ["https://aai.egi.eu/auth/realms/egi"]
    selected_vos:
      type: list
      description: List of VOs to support
      entry_schema:
        type: string
      default: []
    allowed_image_prefixes:
      type: list
      description: Allowed image prefix
      entry_schema:
        type: string
      default: []
    cluster_name:
      type: string
      description: Cluster Name
      default: "oscar"
    domain_name:
      type: string
      description: Domain Name
      default: "im.grycap.net"
    kube_nvidia_support:
      type: boolean
      description: Flag to add NVIDIA support
      default: false
      constraints:
        - valid_values: [ false, true ]
    kube_install_yunikorn:
      type: boolean
      description: Flag to install Apache YuniKorn
      default: false
      constraints:
        - valid_values: [ false, true ]

  node_templates:

    oscar:
      type: tosca.nodes.indigo.OSCAR
      properties:
        minio_secretkey: { get_input: minio_password }
        password: { get_input: oscar_password }
        dns_host: { concat: [ get_input: cluster_name, '.', get_input: domain_name ] }
        minio_dns_host: { concat: [ "minio.", get_input: cluster_name, '.', get_input: domain_name ] }
        minio_dns_host_console: { concat: [ "console.minio.", get_input: cluster_name, '.', get_input: domain_name ] }
        oidc_enable: true
        oidc_subject: { get_input: user_id }
        oidc_groups: { get_input: selected_vos }
        oidc_issuers: { get_input: oidc_issuers }
        yunikorn_enable: { get_input: kube_install_yunikorn }
        allowed_image_prefixes: { get_input: allowed_image_prefixes }
      capabilities:
        endpoint:
          properties:
            ports:
              http_port:
                protocol: tcp
                source: 80
              https_port:
                protocol: tcp
                source: 443
              minio_port:
                protocol: tcp
                source: 30300
      requirements:
        - host: lrms_front_end

    lrms_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Kubernetes
      capabilities:
        endpoint:
          properties:
            port: 30443
            protocol: tcp
      properties:
        admin_username: kubeuser
        admin_token: { get_input: admin_token }
        install_kubeapps: false
        install_metrics: true
        install_nfs_client: true
        install_ingress: true
        version: '1.28.8'
        cert_manager: true
        cert_user_email: { get_input: cert_user_email }
        public_dns_name: { concat: [ get_input: cluster_name, '.', get_input: domain_name ] }
        # cert_manager_challenge: dns01
        # cert_manager_challenge_dns01_domain: { get_input: domain_name }
        # cert_manager_challenge_dns01_ak: AK
        # cert_manager_challenge_dns01_sk: SK
        cri_runtime: containerd
        nvidia_support: { get_input: kube_nvidia_support }
        install_yunikorn: { get_input: kube_install_yunikorn }
      requirements:
        - host: front

    front:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: kubeserver
            additional_dns_names:
              - { concat: [ get_input: cluster_name, '@', get_input: domain_name ] }
              - { concat: [ "minio.", get_input: cluster_name, '@', get_input: domain_name ] }
              - { concat: [ "console.minio.", get_input: cluster_name, '@', get_input: domain_name ] }
            network_name: PUBLIC
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
            instance_type: { get_input: fe_instance_type }
        os:
          properties:
            distribution: ubuntu
            type: linux
      requirements:
        - local_storage:
            node: my_block_storage
            capability: tosca.capabilities.Attachment
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: /pv
                device: hdb

    my_block_storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: storage_size }

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Kubernetes
      properties:
        front_end_ip: { get_attribute: [ front, private_address, 0 ] }
        version: '1.28.8'
        cri_runtime: containerd
        nvidia_support: { get_input: kube_nvidia_support }
      requirements:
        - host: wn

    wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: { get_input: wn_num }
        host:
          properties:
            disk_size: { get_input: wn_disk_size }
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
            instance_type: { get_input: wn_instance_type }
        os:
          properties:
            distribution: ubuntu
            type: linux

  outputs:
    oscarui_endpoint:
      value: { concat: [ 'https://dashboard.oscar.grycap.net?endpoint=https://', get_input: cluster_name, '.', get_input: domain_name, '&username=oscar&password=', get_input: oscar_password ] }
    dashboard_endpoint:
      value: { concat: [ 'https://', get_input: cluster_name, '.', get_input: domain_name, '/dashboard/' ] }
    local_oscarui_endpoint:
      value: { concat: [ 'https://', get_input: cluster_name, '.', get_input: domain_name, '/' ] }
    minio_endpoint:
      value: { concat: [ 'https://minio.', get_input: cluster_name, '.', get_input: domain_name, '/' ] }
    console_minio_endpoint:
      value: { concat: [ 'https://console.minio.', get_input: cluster_name, '.', get_input: domain_name, '/' ] }
