tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v2.0.0/custom_types.yaml

description: Deploy a Horovod Virtual Cluster (with MPI, Tensorflow, Keras and PyTorck) with a shared NFS filesystem.

metadata:
  template_name: Horovod
  template_version: "0.4.0"
  tag: beta
  display_name: Deploy a Horovod virtual cluster
  icon: https://horovod.readthedocs.io/en/latest/_static/logo.png
  tabs:
    FE Data: fe.*
    WN Data: wn.*

topology_template:
  inputs:
    fe_cpus:
      type: integer
      description: Number of CPUs for the front-end node
      default: 2
      required: yes
      constraints:
        - valid_values: [ 2, 4, 8, 16, 32, 64 ]
    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 8 GiB
      required: yes
      constraints:
        - valid_values: [ 8 GiB, 16 GiB, 32 GiB, 64 GiB, 128 GiB, 256 GiB, 512 GiB ]
    fe_disk_size:
      type: scalar-unit.size
      description: Size of the FE root disk.
      default: 40 GiB
      constraints:
        - valid_values: [ 40 GiB, 50 GiB, 100 GiB, 200 GiB, 500 GiB, 1 TiB, 2 TiB ]

    wn_num:
      type: integer
      description: Number of WNs in the cluster
      default: 1
      required: yes
    wn_cpus:
      type: integer
      description: Number of CPUs for the WNs
      default: 2
      required: yes
      constraints:
        - valid_values: [ 2, 4, 8, 16, 32, 64 ]
    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 8 GiB
      required: yes
      constraints:
        - valid_values: [ 8 GiB, 16 GiB, 32 GiB, 64 GiB, 128 GiB, 256 GiB, 512 GiB ]
    wn_disk_size:
      type: scalar-unit.size
      description: Size of the WN root disk.
      default: 40 GiB
      constraints:
        - valid_values: [ 40 GiB, 50 GiB, 100 GiB, 200 GiB, 500 GiB, 1 TiB, 2 TiB ]
    wn_num_gpus:
      type: integer
      description: Number of GPUs to assing to this VM
      default: 0
      constraints:
        - valid_values: [ 0, 1, 2, 3, 4 ]
    wn_gpu_vendor:
      type: string
      description: GPU Vendor
      default: ''
      constraints:
        - valid_values: [ '', 'NVIDIA', 'AMD' ]
    wn_gpu_model:
      type: string
      description: GPU Model
      default: ''
    wn_gpu_support:
      type: boolean
      description: Flag to add GPU support in the WN (install NCCL, CUDA and NVIDIA drivers)
      default: false
      constraints:
        - valid_values: [ false, true ]

  node_templates:

    horovod_fe:
      type: tosca.nodes.SoftwareComponent
      artifacts:
        ssh_role:
          file: grycap.ssh
          type: tosca.artifacts.AnsibleGalaxy.role
        nfs_role:
          file: grycap.nfs
          type: tosca.artifacts.AnsibleGalaxy.role
        horovod_role:
          file: grycap.horovod
          type: tosca.artifacts.AnsibleGalaxy.role
      requirements:
        - host: front
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v2.0.0/artifacts/horovod/horovod_fe.yml

    front:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            ports:
              http_port:
                protocol: tcp
                source: 22
        host:
          properties:
            disk_size: { get_input: fe_disk_size }
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
        os:
          properties:
            type: linux

    horovod_wn:
      type: tosca.nodes.SoftwareComponent
      artifacts:
        ssh_role:
          file: grycap.ssh
          type: tosca.artifacts.AnsibleGalaxy.role
        nfs_role:
          file: grycap.nfs
          type: tosca.artifacts.AnsibleGalaxy.role
        horovod_role:
          file: grycap.horovod
          type: tosca.artifacts.AnsibleGalaxy.role
      requirements:
        - host: wn
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v2.0.0/artifacts/horovod/horovod_wn.yml
            inputs:
              horovod_front_end_ip: { get_attribute: [ front, private_address, 0 ] }
              horovod_gpu_support: { get_input: wn_gpu_support }
    wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: { get_input: wn_num }
        host:
          properties:
            disk_size: { get_input: wn_disk_size }
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
            num_gpus: { get_input: wn_num_gpus }
            gpu_vendor: { get_input: wn_gpu_vendor }
            gpu_model: { get_input: wn_gpu_model }
        os:
          properties:
            type: linux

  outputs:
    cluster_ip:
      value: { get_attribute: [ front, public_address, 0 ] }
    cluster_creds:
      value: { get_attribute: [ front, endpoint, credential, 0 ] }
    horovod_user:
      value: horovod
