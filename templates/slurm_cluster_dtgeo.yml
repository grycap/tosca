tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/main/custom_types.yaml

description: Deploy a SLURM Virtual Cluster.

metadata:
  template_name: SLURM DT-GEO
  template_version: "1.0.0"
  display_name: DT-GEO SLURM virtual cluster


topology_template:
  inputs:
    wn_num:
      type: integer
      description: Number of WNs in the cluster
      default: 1
      required: yes
    fe_cpus:
      type: integer
      description: Number of CPUs for the front-end node
      default: 1
      required: yes
    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 4 GB
      required: yes
    wn_cpus:
      type: integer
      description: Number of CPUs for the WNs
      default: 1
      required: yes
    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 4 GB
      required: yes

    fe_disk_size:
      type: scalar-unit.size
      description: Size of the disk to be attached to the FE instance (Set 0 if disk is not needed)
      default: 100 GB
      constraints:
        - valid_values: [ 0 GB, 10 GB, 20 GB, 50 GB, 100 GB, 200 GB, 500 GB, 1 TB, 2 TB ]
    fe_mount_path:
      type: string
      description: "Path to mount the FE attached disk"
      default: "/home/data"

    wn_disk_size:
      type: scalar-unit.size
      description: Size of the disk to be attached to the WN instances (Set 0 if disk is not needed)
      default: 20 GB
      constraints:
        - valid_values: [ 20 GB, 50 GB, 100 GB, 200 GB, 500 GB, 1 TB, 2 TB ]

    slurm_version:
      type: string
      description: Version of SLURM to be installed
      default: 23.11.8
      constraints:
        - valid_values: [ '23.11.8', '20.11.9', '21.08.5', '21.08.8', '22.05.10' ]


    singularity_version:
      type: string
      description: Singularity version to install
      default: "4.1.4"

    pycompss_version:
      type: string
      description: PyCOMPSs version to install
      default: "3.3"

  node_templates:


    dtgeo_tools_fe:
      type: tosca.nodes.SoftwareComponent
      requirements:
        - host: lrms_server
      artifacts:
        docker_role:
          file: grycap.docker
          type: tosca.artifacts.AnsibleGalaxy.role
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/main/artifacts/dtgeo.yml
            inputs:
              singularity_version: { get_input: singularity_version }
              pycompss_version: { get_input: pycompss_version }

    dtgeo_tools_wn:
      type: tosca.nodes.SoftwareComponent
      requirements:
        - host: lrms_wn
      artifacts:
        docker_role:
          file: grycap.docker
          type: tosca.artifacts.AnsibleGalaxy.role
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/main/artifacts/dtgeo.yml
            inputs:
              singularity_version: { get_input: singularity_version }
              pycompss_version: { get_input: pycompss_version }

    lrms_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Slurm
      properties:
        wn_ips: { get_attribute: [ lrms_wn, private_address ] }
        version: { get_input: slurm_version }
      requirements:
        - host: lrms_server

    lrms_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: slurmserver
            network_name: PUBLIC
            ports:
              ssh_port:
                source: 22
                protocol: tcp
        host:
          properties:
            disk_size: 40 GB
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
        os:
          properties:
            distribution: ubuntu
            type: linux
            version: 22.04
      requirements:
        - local_storage:
            node: fe_block_storage
            relationship:
              type: AttachesTo
              properties:
                location: { get_input: fe_mount_path }

    fe_block_storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: fe_disk_size }

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Slurm
      properties:
        front_end_ip: { get_attribute: [ lrms_server, private_address, 0 ] }
        public_front_end_ip: { get_attribute: [ lrms_server, public_address, 0 ] }
        version: { get_input: slurm_version }
      requirements:
        - host: lrms_wn

    lrms_wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: { get_input: wn_num }
        host:
          properties:
            disk_size: { get_input: wn_disk_size }
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
        os:
          properties:
            distribution: ubuntu
            type: linux
            version: 22.04

  outputs:
    cluster_ip:
      value: { get_attribute: [ lrms_server, public_address, 0 ] }
    cluster_creds:
      value: { get_attribute: [ lrms_server, endpoint, credential, 0 ] }
