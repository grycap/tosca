tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v1.0.0/custom_types.yaml

description: Deploy a FaaS function on top of an OSCAR Cluster or AWS Lambda

metadata:
  template_name: FaaS function
  template_version: "1.0.0"
  display_name: Deploy a FaaS function on top of an OSCAR Cluster or AWS Lambda
  icon: images/faas.png
  tag: FaaS
  tag_color: purple
  tabs:
    FaaS function:
      - function_name
      - function_memory:
          pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
          tag_type: text
      - function_cpu
      - function_image
      - function_script:
          tag_type: textarea
      - function_input_provider
      - function_input
      - function_output_provider
      - function_output

topology_template:
  inputs:

    function_name:
      type: string
      description: Name of the function
      default: ""
      required: yes
    function_memory:
      type: string
      description: Amount of Memory to assing to the function
      default: 1024Mi
      required: yes
    function_cpu:
      type: float
      description: Amount of CPU to assing to the function (Ignored in AWS Lambda)
      default: 0.1
      required: yes
    function_image:
      type: string
      description: Container Image with the function (It must be in ECR in case of Lambda)
      default: "000000000000.dkr.ecr.us-east-1.amazonaws.com/imagename"
      required: yes
    function_script:
      type: string
      description: Script to execute (Code in case of OSCAR and path for AWS Lambda)
      default: "script.sh"
      required: yes
    function_input_provider:
      type: string
      description: Input provider type
      default: "s3"
      required: yes
      constraints:
        - valid_values: [ "s3", "minio.default" ]
    function_input:
      type: string
      description: Path in the input Bucket
      default: "bucket/input"
      required: yes
    function_output_provider:
      type: string
      description: Output provider type
      default: "s3"
      required: yes
      constraints:
        - valid_values: [ "s3", "minio.default" ]
    function_output:
      type: string
      description: Path in the output Bucket
      default: "bucket/output"
      required: yes

  node_templates:

    faas_service:
      type: tosca.nodes.aisprint.FaaS.Function
      properties:
        name: { get_input: function_name }
        memory: { get_input: function_memory }
        script: { get_input: function_script }
        cpu: { get_input: function_cpu }
        image: { get_input: function_image }
        input:
          - storage_provider: { get_input: function_input_provider }
            path: { get_input: function_input }
        output:
          - storage_provider: { get_input: function_output_provider }
            path: { get_input: function_output }

  outputs:
    faas_service_url:
      value: { get_attribute: [ faas_service, endpoint ] }
    faas_service_cred:
      value: { get_attribute: [ faas_service, credential ] }
