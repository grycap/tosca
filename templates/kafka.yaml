tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v1.0.0/custom_types.yaml

description: Deploy Apache Kafka on top of a Kubernetes Virtual Cluster.

metadata:
  template_version: "1.0.0"
  template_name: Apache Kafka
  display_name: Deploy Apache Kafka on top of a Kubernetes Virtual Cluster
  icon: images/kafka.png
  tabs:
    Kafka: kafka_.*
  parents:
    - kubernetes.yaml
    - oscar.yaml

topology_template:

  inputs:
    kafka_user:
      type: string
      description: Default Kafka SASL JAAS Username
      default: "user"
    kafka_pass:
      type: string
      description: Default Kafka SASL JAAS password
      default: "pass"

  node_templates:

    kafka:
      type: tosca.nodes.ec3.Application
      capabilities:
        endpoint:
          properties:
            ports:
              external_port:
                protocol: tcp
                source: 9094
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v1.0.0/artifacts/kafka_k8s.yml
            inputs:
              kafka_jaas_user: { get_input: kafka_user }
              kafka_jaas_password: { get_input: kafka_pass }
      requirements:
        - host: front
        - dependency: lrms_front_end

  outputs:
    kafka_endpoint:
      value: { concat: [ get_attribute: [ front, public_address, 0 ], ':9094' ] }
    kafka_jaas_conf:
      value: { get_attribute: [ front, ansible_output, kafka_front_conf_front, tasks, kafka_jaas_conf, output ] }
    client_properties:
      value: { get_attribute: [ front, ansible_output, kafka_front_conf_front, tasks, client_properties, output ] }
