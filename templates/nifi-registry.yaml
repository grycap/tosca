tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v1.0.0/custom_types.yaml

description: Deploy an Apache Nifi Registry on top of a Kubernetes Virtual Cluster.

metadata:
  template_version: "1.0.0"
  template_name: Nifi Registry
  display_name: Deploy Apache NiFi registry on top of a Kubernetes Virtual Cluster
  icon: images/nifi-registry.png
  tabs:
    Nifi Registry: nifi_reg_.*
  parents:
    - kubernetes.yaml

topology_template:

  inputs:

    nifi_reg_ui_auth:
      type: string
      description: "Username + password in base64 to access the Registry Web UI: 'htpasswd -nb user pass | base64' default 'user' + 'pass'"
      default: dXNlcjokYXByMSRSTk5sQmdMZiR1elJDTkp3Uno2MGIwcENkdEJUckQuCgo=
      required: yes

  node_templates:

    nifi_reg_ns:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: v1
          kind: Namespace
          metadata:
            name: 'nifi-registry'
      requirements:
        - host: lrms_front_end

    nifi_reg_pvc:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            namespace: nifi-registry
            name: nifi-registry-pvc
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
      requirements:
        - host: lrms_front_end
        - dependency: nifi_reg_ns

    nifi_reg:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nifi-registry
            namespace: nifi-registry
            labels:
              app: nifi-registry
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: nifi-registry
            template:
              metadata:
                labels:
                  app: nifi-registry
              spec:
                volumes:
                  - name: nifi-registry
                    persistentVolumeClaim:
                      claimName: nifi-registry-pvc
                containers:
                  - name: nifi-registry
                    image: apache/nifi-registry
                    ports:
                      - containerPort: 18080
                    resources:
                      requests:
                        memory: 800Mi
                        cpu: 500m
                    startupProbe:
                      failureThreshold: 60
                      periodSeconds: 10
                      tcpSocket:
                        port: 18080
                    livenessProbe:
                      periodSeconds: 20
                      tcpSocket:
                        port: 18080
                    volumeMounts:
                      - name: nifi-registry
                        mountPath: /opt/nifi-registry/nifi-registry-current/database
                        subPath: database
                      - name: nifi-registry
                        mountPath: /opt/nifi-registry/nifi-registry-current/flow_storage
                        subPath: flow_storage
                restartPolicy: Always
      requirements:
        - host: lrms_front_end
        - dependency: nifi_reg_ns

    nifi_reg_services:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: v1
          kind: Service
          metadata:
            namespace: nifi-registry
            labels:
              app: nifi-registry
            name: service-nifi-registry
          spec:
            ports:
              - name: '18080'
                port: 18080
                targetPort: 18080
            selector:
              app: nifi-registry
      requirements:
        - host: lrms_front_end
        - dependency: nifi_reg_ns

    nifi_ui_secret:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec:
          concat:
            - |-
                apiVersion: v1
                data:
                  auth: '
            - get_input: nifi_reg_ui_auth
            - |-
                '
                kind: Secret
                metadata:
                  name: basic-auth
                  namespace: nifi-registry
                type: Opaque
      requirements:
        - host: lrms_front_end
        - dependency: nifi_reg_ns

    nifi_reg_ingress:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: ingress-nifi-registry
            namespace: nifi-registry
            annotations:
              kubernetes.io/ingress.class: 'nginx'
              nginx.ingress.kubernetes.io/auth-type: basic
              nginx.ingress.kubernetes.io/auth-secret: basic-auth
              nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
          spec:
            rules:
            - http:
                paths:
                - path: /nifi-registry
                  backend:
                    service:
                      name: service-nifi-registry
                      port:
                        number: 18080
                  pathType: Prefix
      requirements:
        - host: lrms_front_end
        - dependency: nifi_reg_ns

  outputs:
    nifi_registry_endpoint:
      value: { concat: [ 'https://', get_attribute: [ front, public_address, 0 ], '/nifi-registry/' ] }
    nifi_registry_local_endpoint:
      value: 'http://service-nifi-registry.nifi-registry.svc.cluster.local:18080'
