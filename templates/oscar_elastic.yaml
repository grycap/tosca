tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/main/custom_types.yaml

description: Make OSCAR Virtual Cluster Elastic.

metadata:
  template_version: "1.0.0"
  template_name: Elastic
  display_name: Make OSCAR Virtual Cluster Elastic
  icon: images/elasticity.png
  tag: elastic
  tabs:
    Elastic Data:
      - max_wn_num
      - min_wn_num
  parents:
    - oscar.yaml

topology_template:
  inputs:
    max_wn_num:
      type: integer
      description: Maximum Number of WNs in the OSCAR cluster
      default: 1
      required: yes
    min_wn_num:
      type: integer
      description: Min Number of free WNs in the cluster
      default: 0
      required: yes

  node_templates:


    elastic_cluster_front_end:
      type: tosca.nodes.ec3.ElasticCluster
      properties:
        im_auth: ""
        powermanager_plugin: im
        kube_token: { get_input: admin_token }
        config_options:
          - { section: 'scheduling', option: 'IDLE_TIME', value: '300' }
          - { section: 'scheduling', option: 'RECONSIDER_JOB_TIME', value: '60' }
          - { section: 'monitoring', option: 'MAX_WAIT_POWERON', value: '3000' }
          - { section: 'monitoring', option: 'MAX_WAIT_POWEROFF', value: '600' }
          - { section: 'monitoring', option: 'PERIOD_LIFECYCLE', value: '20' }
          - { section: 'monitoring', option: 'PERIOD_MONITORING_NODES', value: '20' }
          - { section: 'client', option: 'CLUES_REQUEST_WAIT_TIMEOUT', value: '3000' }
          # These options enable to have always one slot free
          - { section: 'scheduling', option: 'SCHEDULER_CLASSES', value: 'clueslib.schedulers.CLUES_Scheduler_PowOn_Requests, clueslib.schedulers.CLUES_Scheduler_Reconsider_Jobs, clueslib.schedulers.CLUES_Scheduler_PowOff_IDLE, clueslib.schedulers.CLUES_Scheduler_PowOn_Free' }
          - { section: 'scheduling', option: 'EXTRA_NODES_FREE', value: { get_input: min_wn_num } }
      capabilities:
        endpoint:
          properties:
            port: 8800
            protocol: tcp
      requirements:
        - lrms: lrms_front_end
        - wn: wn_node
        - host: front
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/main/artifacts/refresh_install.yml
            inputs:
              CLIENT_ID: client_id
              CLIENT_SECRET: client_secret
          start:
            implementation: https://raw.githubusercontent.com/grycap/tosca/main/artifacts/use_external_im.yml


    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Kubernetes
      properties:
        front_end_ip: { get_attribute: [ front, private_address, 0 ] }
        version: '1.28.8'
        cri_runtime: containerd
        nvidia_support: { get_input: kube_nvidia_support }
      capabilities:
        wn:
          properties:
            max_instances: { get_input: max_wn_num }
            min_instances: 0
      requirements:
        - host: wn

    wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: vnode-#N#.localdomain
        scalable:
          properties:
            count: { get_input: min_wn_num }
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
            instance_type: { get_input: wn_instance_type }
        os:
          properties:
            distribution: ubuntu
            type: linux
