tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v2.0.0/custom_types.yaml

description: Deploy Apache NiFi on top of a Kubernetes Virtual Cluster.

metadata:
  template_version: "1.1.0"
  template_name: Nifi
  display_name: Deploy Apache NiFi on top of a Kubernetes Virtual Cluster
  icon: images/nifi.png
  parents:
    - kubernetes.yaml
    - oscar.yaml
  tabs:
    Nifi: nifi_.*

topology_template:
  inputs:

    nifi_ui_auth:
      type: string
      description: "Username + password in base64 to access the Nifi Web UI: 'htpasswd -nb user pass | base64' default 'user' + 'pass'"
      default: dXNlcjokYXByMSRSTk5sQmdMZiR1elJDTkp3Uno2MGIwcENkdEJUckQuCgo=
      required: yes
    nifi_replicas:
      type: integer
      description: Number of Nifi replicas
      default: 2
    nifi_docker_image:
      type: string
      description: Nifi Docker image (apache/nifi)
      default: ghcr.io/grycap/nifi-sse

  node_templates:

    nifins:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: v1
          kind: Namespace
          metadata:
            name: 'nifi'
      requirements:
        - host: lrms_front_end

    zookeepercm:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: zookeeper-cm
            namespace: nifi
          data:
            ALLOW_ANONYMOUS_LOGIN: 'yes'
            ZOO_ADMINSERVER_ENABLED: 'false'
            ZOO_AUTOPURGE_PURGEINTERVAL: '2'
            ZOO_AUTOPURGE_SNAPRETAINCOUNT: '10'
            ZOO_CFG_EXTRA: 'metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7070'
            ZOO_INIT_LIMIT: '10'
            ZOO_STANDALONE_ENABLED: 'true'
            ZOO_SYNC_LIMIT: '6'
            ZOO_TICK_TIME: '4000'
      requirements:
        - host: lrms_front_end
        - dependency: nifins

    zookeeperss:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: apps/v1
          kind: StatefulSet
          metadata:
            name: zookeeper
            namespace: nifi
            labels:
              name: zookeeper
              app: zookeeper
          spec:
            serviceName: zookeeper
            selector:
              matchLabels:
                app: zookeeper
            template:
              metadata:
                labels:
                  app: zookeeper
              spec:
                restartPolicy: Always
                containers:
                - name: zookeeper
                  image: docker.io/zookeeper:3.8
                  imagePullPolicy: IfNotPresent
                  ports:
                  - containerPort: 2181
                    name: zk
                  - containerPort: 8080
                    name: web
                  - containerPort: 7070
                    name: metrics
                  env:
                    - name: POD_IP
                      valueFrom:
                        fieldRef:
                          fieldPath: status.podIP
                    - name: ZOO_SERVERS
                      value: 'server.1=$(POD_IP):2888:3888;2181'
                  envFrom:
                    - configMapRef:
                        name: zookeeper-cm
                        optional: false
                  livenessProbe:
                    exec:
                      command:
                        - which
                        - java
                    initialDelaySeconds: 30
                    periodSeconds: 30
                    timeoutSeconds: 10
                    failureThreshold: 3
                    successThreshold: 1
                  readinessProbe:
                    tcpSocket:
                        port: 2181
                    initialDelaySeconds: 120
                    periodSeconds: 30
                    timeoutSeconds: 10
                    failureThreshold: 3
                    successThreshold: 1
                  resources:
                    requests:
                      cpu: 200m
                      memory: 500Mi
                    limits:
                      cpu: 200m
                      memory: 500Mi
                  volumeMounts:
                    - mountPath: /data
                      name: data
                      subPath: zookeeper_data
                    - mountPath: /datalog
                      name: data
                      subPath: zookeeper_datalog
                    - mountPath: /conf
                      name: data
                      subPath: zookeeper_conf
                volumes:
                  - name: data
                    persistentVolumeClaim:
                      claimName: nifipvc
      requirements:
        - host: lrms_front_end
        - dependency: nifins

    zookeepersvc:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: v1
          kind: Service
          metadata:
            name: zookeeper
            namespace: nifi
            labels:
              app: zookeeper
          spec:
            type: ClusterIP
            selector:
              app: zookeeper
            ports:
            - protocol: TCP
              port: 2181
              targetPort: 2181
              name: zk
            - protocol: TCP
              port: 8080
              targetPort: 8080
              name: web
            - protocol: TCP
              port: 7070
              targetPort: 7070
              name: metrics
      requirements:
        - host: lrms_front_end
        - dependency: nifins

    nifipvc:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            namespace: nifi
            name: nifipvc
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
      requirements:
        - host: lrms_front_end
        - dependency: nifins

    nificm:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec:
          concat:
            - |-
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: nifi-cm
                  namespace: nifi
                data:
                  JAVA_OPTS: '-XX:UseAVX=0'
                  NIFI_ANALYTICS_PREDICT_ENABLED: 'true'
                  NIFI_CLUSTER_IS_NODE: 'true'
                  NIFI_CLUSTER_LOAD_BALANCE_HOST: 'nifi'
                  NIFI_CLUSTER_NODE_CONNECTION_TIMEOUT: '2 min'
                  NIFI_CLUSTER_NODE_LOAD_BALANCE_PORT: '6342'
                  NIFI_CLUSTER_NODE_PROTOCOL_MAX_THREADS: '15'
                  NIFI_CLUSTER_NODE_PROTOCOL_PORT: '11443'
                  NIFI_CLUSTER_NODE_READ_TIMEOUT: '2 min'
                  NIFI_CLUSTER_PROTOCOL_CONNECTION_HANDSHAKE_TIMEOUT: '2 min'
                  NIFI_CLUSTER_PROTOCOL_HEARTiBEAT_INTERVAL: '1 min'
                  NIFI_ELECTION_MAX_CANDIDATES: '2'
                  NIFI_ELECTION_MAX_WAIT: '1 min'
                  NIFI_SENSITIVE_PROPS_KEY: '1yhqju3ubhp5rjeb'
                  NIFI_WEB_HTTP_PORT: '8080'
                  NIFI_ZK_CONNECT_STRING: 'zookeeper:2181'
                  NIFI_ZOOKEEPER_CONNECT_STRING: 'zookeeper:2181'
                  NIFI_WEB_PROXY_HOST: '
            - get_attribute: [ front, public_address, 0 ]
            - |-
                '
      requirements:
        - host: lrms_front_end
        - dependency: nifins

    nifi:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec:
          concat:
            - |-
                apiVersion: apps/v1
                kind: Deployment
                metadata:
                  annotations:
                  labels:
                    app: nifi
                  name: nifi
                  namespace: nifi
                spec:
                  replicas:
            - ' '
            - get_input: nifi_replicas
            - "\n"
            - |-
                # replicas
                  selector:
                    matchLabels:
                      app: nifi
                  template:
                    metadata:
                      labels:
                        app: nifi
                    spec:
                      restartPolicy: Always
                      volumes:
                        - name: nifi
                          persistentVolumeClaim:
                            claimName: nifipvc
                      initContainers:
                        - name: wait-for-zookeeper
                          image: docker.io/busybox:1.35
                          command:
                          - sh
                          - -c
                          - |
                            echo 'Connecting to Zookeeper ${NIFI_ZK_CONNECT_STRING}'
                            until nc -vzw 1 zookeeper 2181 ; do
                              echo 'Waiting for zookeeper to start'
                              sleep 3
                            done
                          envFrom:
                          - configMapRef:
                              name: nifi-cm
                              optional: false
                          resources:
                            requests:
                              cpu: 20m
                              memory: 10Mi
                            limits:
                              cpu: 20m
                              memory: 10Mi
                      containers:
                        - name: nifi
                          image: '
            - get_input: nifi_docker_image
            - "'\n"
            - |-
                # image
                          ports:
                          - containerPort: 8080
                            name: nifi
                          - containerPort: 11443
                            name: cluster
                          - containerPort: 6342
                            name: cluster-lb
                          resources:
                            requests:
                              memory: 1Gi
                              cpu: 400m
                          startupProbe:
                            failureThreshold: 600
                            periodSeconds: 10
                            tcpSocket:
                              port: 8080
                          livenessProbe:
                            periodSeconds: 20
                            tcpSocket:
                              port: 8080
                          volumeMounts:
                            - name: nifi
                              mountPath: /opt/nifi/nifi-current/data
                              subPath: data
                            - name: nifi
                              mountPath: /state
                              subPath: state
                          env:
                            - name: NIFI_CLUSTER_NODE_ADDRESS
                              valueFrom:
                                fieldRef:
                                  fieldPath: status.podIP
                            - name: HOSTNAME
                              valueFrom:
                                fieldRef:
                                  fieldPath: status.podIP
                          envFrom:
                          - configMapRef:
                              name: nifi-cm
                              optional: false
      requirements:
        - host: lrms_front_end
        - dependency: nifins

    nifi_services:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: v1
          kind: Service
          metadata:
            namespace: nifi
            labels:
              app: nifi
            name: service-nifi
          spec:
            ports:
              - name: '8080'
                port: 8080
                targetPort: 8080
            selector:
              app: nifi
      requirements:
        - host: lrms_front_end
        - dependency: nifins

    nifi_ui_secret:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec:
          concat:
            - |-
                apiVersion: v1
                data:
                  auth: '
            - get_input: nifi_ui_auth
            - |-
                '
                kind: Secret
                metadata:
                  name: basic-auth
                  namespace: nifi
                type: Opaque
      requirements:
        - host: lrms_front_end
        - dependency: nifins

    nifi_ingress:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: nifi
            namespace: nifi
            annotations:
              nginx.ingress.kubernetes.io/auth-type: basic
              nginx.ingress.kubernetes.io/auth-secret: basic-auth
              nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
              nginx.ingress.kubernetes.io/use-regex: 'true'
          spec:
            ingressClassName: nginx
            rules:
            - http:
                paths:
                - path: /nifi
                  backend:
                    service:
                      name: service-nifi
                      port:
                        number: 8080
                  pathType: Prefix
      requirements:
        - host: lrms_front_end
        - dependency: nifins

  outputs:
    nifi_endpoint:
      value: { concat: [ 'https://', get_attribute: [ front, public_address, 0 ], '/nifi/' ] }
