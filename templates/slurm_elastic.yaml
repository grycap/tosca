tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/main/custom_types.yaml

description: Make SLURM Virtual Cluster Elastic.

metadata:
  template_version: "1.0.1"
  template_name: Elastic
  display_name: Make SLURM Virtual Cluster Elastic
  icon: images/elasticity.png
  tag: elastic
  tabs:
    Elastic Data:
      - max_wn_num
  parents:
    - slurm_cluster.yml

topology_template:
  inputs:
    max_wn_num:
      type: integer
      description: Maximum Number of WNs in the cluster
      default: 1
      required: yes

  node_templates:

    elastic_cluster_front_end:
      type: tosca.nodes.ec3.ElasticCluster
      properties:
        im_auth: ""
        powermanager_plugin: im
        config_options:
          - { section: 'scheduling', option: 'IDLE_TIME', value: '300' }
          - { section: 'scheduling', option: 'RECONSIDER_JOB_TIME', value: '60' }
          - { section: 'monitoring', option: 'MAX_WAIT_POWERON', value: '3000' }
          - { section: 'monitoring', option: 'MAX_WAIT_POWEROFF', value: '600' }
          - { section: 'monitoring', option: 'PERIOD_LIFECYCLE', value: '20' }
          - { section: 'monitoring', option: 'PERIOD_MONITORING_NODES', value: '20' }
          - { section: 'client', option: 'CLUES_REQUEST_WAIT_TIMEOUT', value: '3000' }
      capabilities:
        endpoint:
          properties:
            port: 8800
            protocol: tcp
      requirements:
        - lrms: lrms_front_end
        - wn: wn_node
        - host: lrms_server
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/main/artifacts/refresh_install.yml
            inputs:
              CLIENT_ID: client_id
              CLIENT_SECRET: client_secret
          start:
            implementation: https://raw.githubusercontent.com/grycap/tosca/main/artifacts/use_external_im.yml

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Slurm
      properties:
        front_end_ip: { get_attribute: [ lrms_server, private_address, 0 ] }
        public_front_end_ip: { get_attribute: [ lrms_server, public_address, 0 ] }
        version: { get_input: slurm_version }
      capabilities:
        wn:
          properties:
            max_instances: { get_input: max_wn_num }
            min_instances: 0
      properties:
        front_end_ip: { get_attribute: [ lrms_server, private_address, 0 ] }
        public_front_end_ip: { get_attribute: [ lrms_server, public_address, 0 ] }
      requirements:
        - host: lrms_wn
