tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v1.0.0/custom_types.yaml

description: Donwload some data available in an URL to a local path

metadata:
  template_version: "1.1.0"
  template_name: Download
  display_name: Download File in VM local path
  icon: images/download.png
  parents:
    - simple-node-disk.yml
  tabs:
    Download Data: .*

topology_template:

  inputs:

    data_url:
      type: string
      description: URL of the data to Download (HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path)
      default: ''

    local_path:
      type: string
      description: Local path to download the data (it will be created if not exists)
      default: '/opt'

    unarchive:
      type: boolean
      description: Unarchive the downloaded file. (Setting this flag implies that 'Wait to download' will be ignored and set to true)
      default: false
      constraints:
        - valid_values: [ false, true ]

    max_download_time:
      type: integer
      description: Timeout of the download task (in seconds)
      default: 1800

    wait_to_download:
      type: boolean
      description: Wait to data to be downloaded, otherwise download in background (in this case no error check)
      default: true
      constraints:
        - valid_values: [ true, false ]

  node_templates:

    get_data:
      type: tosca.nodes.SoftwareComponent
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v1.0.0/artifacts/download_data.yml
            inputs:
              data_url: { get_input: data_url }
              local_path: { get_input: local_path }
              wait_to_download: { get_input: wait_to_download }
              max_download_time: { get_input: max_download_time }
              unarchive_file: { get_input: unarchive }
      requirements:
        - host: simple_node
