tosca_definitions_version: tosca_simple_yaml_1_0
imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/main/custom_types.yaml
description: >
  Deploy a cluster with Scipion via VNC
metadata:
  template_name: Scipion
  template_version: "2.0.0"
  template_author: Laura del Cano
  display_name: Scipion on SLURM cluster
  icon: images/scipion.png
  tabs:
    Master Features: .*_master
    Worker Features: .*_worker
    App Features:
      - vnc_pass
topology_template:
  inputs:
    vnc_pass:
      type: string
      description: VNC password
      required: yes
      default: Scipion4u

    num_gpus_master:
      type: integer
      description: Number of GPUs to assing to the master
      required: yes
      default: 0
      constraints:
        - valid_values: [ 0, 1, 2 ]
    num_cpus_master:
      type: integer
      description: Numbers of CPUs to assign to the master
      required: yes
      default: 8
      constraints:
        - valid_values: [ 8, 2, 4, 16, 32, 64 ]
    mem_size_master:
      type: scalar-unit.size
      description: Ammount of RAM (GiB) to assign to the master
      default: 30 GiB
      required: yes
      constraints:
        - valid_values: [ 30 GiB, 4 GiB, 8 GiB, 16 GiB, 32 GiB, 64 GiB, 128 GiB ]
    disk_size_master:
      type: scalar-unit.size
      description: Size of the external disk attached to the server
      default: 200 GiB
      constraints:
        - valid_values: [ 200 GiB, 500 GiB, 1 TiB, 5 TiB, 8TiB ]

    num_worker:
      type: integer
      description: Number of worker nodes in cluster
      default: 0
      constraints:
        - valid_values: [ 0, 1 ]
    num_gpus_worker:
      type: integer
      description: Number of GPUs to assing to the worker
      required: yes
      default: 0
      constraints:
        - valid_values: [ 0, 1, 2 ]
    num_cpus_worker:
      type: integer
      description: Numbers of CPUs to assign to the worker
      required: yes
      default: 8
      constraints:
        - valid_values: [ 8, 2, 4, 16, 32, 64 ]
    mem_size_worker:
      type: scalar-unit.size
      description: Ammount of RAM (GiB) to assign to the worker
      default: 30 GiB
      required: yes
      constraints:
        - valid_values: [ 30 GiB, 4 GiB, 8 GiB, 16 GiB, 32 GiB, 64 GiB, 128 GiB ]

  node_templates:
    pub_network:
      type: tosca.nodes.network.Network
      properties:
        network_type: public

    server_pub_port:
      type: tosca.nodes.network.Port
      properties:
        order: 1
      requirements:
        - binding: lrms_server
        - link: pub_network

    priv_network:
      type: tosca.nodes.network.Network
      properties:
        network_type: private

    server_port:
      type: tosca.nodes.network.Port
      properties:
        order: 0
      requirements:
        - binding: lrms_server
        - link: priv_network

    wn_port:
      type: tosca.nodes.network.Port
      properties:
        order: 0
      requirements:
        - binding: lrms_wn
        - link: priv_network

    lrms_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: scipion-master
            ports:
              ssh_port:
                protocol: tcp
                source: 22
              novnc_port:
                protocol: tcp
                source: 8443
        host:
          properties:
            disk_size: 50 GB
            num_gpus: { get_input: num_gpus_master }
            num_cpus: { get_input: num_cpus_master }
            mem_size: { get_input: mem_size_master }
            gpu_vendor: 'nvidia'
        os:
          properties:
            type: linux
      requirements:
        - local_storage:
            node: my_block_storage
            relationship:
              type: AttachesTo
              properties:
                location: /home

    front:
      type: tosca.nodes.SoftwareComponent
      requirements:
        - host: lrms_server
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/main/artifacts/scipion/apptainer_master.yaml
            inputs:
              vnc_pass: { get_input: vnc_pass }
              slurm_front_end_ip: { get_attribute: [ lrms_server, private_address, 0 ] }
      artifacts:
        vnc_role:
          file: grycap.vnc
          type: tosca.artifacts.AnsibleGalaxy.role
        slurm_role:
          file: grycap.slurm
          type: tosca.artifacts.AnsibleGalaxy.role
        nfs_role:
          file: grycap.nfs
          type: tosca.artifacts.AnsibleGalaxy.role
        docker_role:
          file: usegalaxy_eu.apptainer
          type: tosca.artifacts.AnsibleGalaxy.role

    lrms_wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: { get_input: num_worker }
        endpoint:
          properties:
            dns_name: scipion-wn-#N#
        host:
          properties:
            disk_size: 100 GB
            num_gpus: { get_input: num_gpus_worker }
            num_cpus: { get_input: num_cpus_worker }
            mem_size: { get_input: mem_size_worker }
            gpu_vendor: 'nvidia'
        os:
          properties:
            type: linux

    wn:
      type: tosca.nodes.SoftwareComponent
      requirements:
        - host: lrms_wn
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/main/artifacts/scipion/ansible_worker.yaml
            inputs:
              slurm_front_end_ip: { get_attribute: [ lrms_server, private_address, 0 ] }
      artifacts:
        slurm_role:
          file: grycap.slurm
          type: tosca.artifacts.AnsibleGalaxy.role
        nfs_role:
          file: grycap.nfs
          type: tosca.artifacts.AnsibleGalaxy.role
        docker_role:
          file: usegalaxy_eu.apptainer
          type: tosca.artifacts.AnsibleGalaxy.role

    my_block_storage:
      type: BlockStorage
      properties:
        size: { get_input: disk_size_master }
  outputs:
    no_vnc_endpoint:
      value: { concat: [ 'https://', get_attribute: [ lrms_server, public_address, 0 ], ':8443/vnc.html' ] }
