tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/main/custom_types.yaml

description: Deploy MinIO server.

metadata:
  template_version: "1.0.0"
  template_name: MinIO
  display_name: Deploy MinIO server

topology_template:

  inputs:

    num_cpus:
      type: integer
      description: Number of virtual cpus for the VM
      default: 2
      constraints:
        - valid_values: [ 2, 4, 8, 16, 32, 64, 1 ]
    mem_size:
      type: scalar-unit.size
      description: Amount of memory for the VM
      default: 4 GB
      constraints:
        - valid_values: [ 4 GB, 8 GB, 16 GB, 32 GB, 64 GB, 128 GB, 256 GB, 512 GB, 2 GB ]
    disk_size:
      type: scalar-unit.size
      description: Size of the root disk of the VM (in case of 0 disk will no be resized)
      default: 20 GB
      constraints:
        - valid_values: [ 20 GB, 50 GB, 100 GB, 200 GB, 0 GB ]

    storage_size:
      type: scalar-unit.size
      description: Size of the extra HD added to the instance
      default: 50 GB
      constraints:
        - valid_values: [ 50 GB, 100 GB, 200 GB, 500 GB, 1 TB, 2 TB, 10 TB, 20 TB, 40 TB, 100 TB ]
    mount_path:
      type: string
      description: Path to mount the extra disk
      default: /data

    minio_release:
      default: RELEASE.2024-07-16T23-46-41Z
      description: Check out https://github.com/minio/minio/tags
      type: string
    minio_accesskey:
      default: changeme
      description: Access key credential for object storage and web access
      type: string
    minio_secretkey:
      constraints:
        - min_length: 8
      default: changeme123
      description: Secret key credential for object storage and web access
      type: string

    minio_letsencrypt_email:
      default: changeme@email.com
      description: Email to be used for Let's Encrypt certificates
      type: string

  node_templates:

    minio:
      type: tosca.nodes.ec3.Application
      artifacts:
        docker_role:
          file: grycap.docker
          type: tosca.artifacts.AnsibleGalaxy.role
      capabilities:
        endpoint:
          properties:
            ports:
              port_http:
                protocol: tcp
                source: 80
              port_https:
                protocol: tcp
                source: 443
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/main/artifacts/minio_compose.yml
            inputs:
              admin_pass:
                get_input: minio_secretkey
              admin_user:
                get_input: minio_accesskey
              dns_console:
                { concat: ["console.minio.", { get_attribute: [ simple_node, public_address, 0 ] }, ".nip.io"] }
              dns_api:
                { concat: ["minio.", { get_attribute: [ simple_node, public_address, 0 ] }, ".nip.io"] }
              letsencrypt_email:
                get_input: minio_letsencrypt_email
              release:
                get_input: minio_release
      requirements:
        - host: simple_node

    simple_node:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
        scalable:
          properties:
            count: 1
        host:
          properties:
            disk_size: { get_input: disk_size }
            num_cpus: { get_input: num_cpus }
            mem_size: { get_input: mem_size }
        os:
          properties:
            type: linux
            distribution: ubuntu
      requirements:
        - local_storage:
            node: my_block_storage
            capability: tosca.capabilities.Attachment
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: { get_input: mount_path }

    my_block_storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: storage_size }

  outputs:
    minio_console:
      value: { concat: ["https://console.minio.", { get_attribute: [ simple_node, public_address, 0 ] }, ".nip.io"] }
    minio_api:
      value: { concat: ["https://minio.", { get_attribute: [ simple_node, public_address, 0 ] }, ".nip.io"] }
