tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/refs/tags/v2.0.0/custom_types.yaml

description: Deploy an InfluxDB on top of a Kubernetes Virtual Cluster.

metadata:
  template_version: "1.0.0"
  template_name: InfluxDB
  display_name: Deploy an InfluxDB on top of a Kubernetes Virtual Cluster
  icon: images/k8s_influxdb.png
  tabs:
    InfluxDB Data: .*
  parents:
    - kubernetes.yaml

topology_template:
  inputs:

    org_name:
      type: string
      description: Name of organization
      default: org
    bucket_name:
      type: string
      description: Name of the bucket
      default: bucket

    admin_username:
      type: string
      description: Name of the full admin user
      default: admin
    admin_password:
      type: string
      description: Password of the full admin user
      default: adminpass
    admin_token:
      type: string
      description: Token of the full admin user
      default: admintoken

    grafana_password:
      type: string
      description: Password of the grafana admin user
      default: grafanapass

  node_templates:

    grafana-secret:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec:
          concat:
            - |-
                apiVersion: v1
                kind: Secret
                metadata:
                  name: grafana-secrets
                  namespace: ai-sprint-mon
                stringData:
                  admin-user: grafana
                  admin-password: "
            - get_input: grafana_password
            - |-
                "
      requirements:
        - host: lrms_front_end
        - dependency: influxdb

    grafana:
      type: tosca.nodes.indigo.Helm.Chart
      properties:
        namespace: ai-sprint-mon
        repository_name: grafana
        repository_url: "https://grafana.github.io/helm-charts"
        name: grafana
        values_file: |
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          admin:
            existingSecret: grafana-secrets
            userKey: admin-user
            passwordKey: admin-password
          persistence:
            type: pvc
            enabled: true
            accessModes:
              - ReadWriteOnce
          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: nginx
            path: /grafana/
            hosts: []
          grafana.ini:
            server:
              root_url: '%(protocol)s://%(domain)s:%(http_port)s/grafana/'
              serve_from_sub_path: true
      requirements:
        - host: front
        - dependency: grafana-secret

    telegraf-secret:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec:
          concat:
            - |-
                apiVersion: v1
                kind: Secret
                metadata:
                  name: telegraf-creds
                  namespace: ai-sprint-mon
                stringData:
                  INFLUXDB_TOKEN: "
            - get_input: admin_token
            - |-
                "
                  INFLUXDB_BUCKET: "
            - get_input: bucket_name
            - |-
                "
                  INFLUXDB_ORG: "
            - get_input: org_name
            - |-
                "
      requirements:
        - host: lrms_front_end
        - dependency: influxdb

    telegraf:
      type: tosca.nodes.indigo.Helm.Chart
      properties:
        namespace: ai-sprint-mon
        repository_name: influxdata
        repository_url: "https://helm.influxdata.com/"
        name: telegraf-ds
        values_file: |
          env:
            - name: INFLUXDB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: telegraf-creds
                  key: INFLUXDB_TOKEN
            - name: INFLUXDB_ORG
              valueFrom:
                secretKeyRef:
                  name: telegraf-creds
                  key: INFLUXDB_ORG
            - name: INFLUXDB_BUCKET
              valueFrom:
                secretKeyRef:
                  name: telegraf-creds
                  key: INFLUXDB_BUCKET
          config:
            outputs:
              - influxdb_v2:
                  urls: ['http://influxdb:8086/']
                  organization: '$INFLUXDB_ORG'
                  bucket: '$INFLUXDB_BUCKET'
                  token: '$INFLUXDB_TOKEN'
      requirements:
        - host: front
        - dependency: telegraf-secret

    influxdb_ingress:
      type: tosca.nodes.indigo.KubernetesObject
      properties:
        spec: |
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: influxdb
            namespace: ai-sprint-mon
            annotations:
              kubernetes.io/ingress.class: nginx
          spec:
            rules:
            - http:
                paths:
                - path: /
                  backend:
                    service:
                      name: influxdb
                      port:
                        number: 8086
                  pathType: Prefix
      requirements:
        - host: lrms_front_end
        - dependency: influxdb

    influxdb:
      type: tosca.nodes.indigo.Helm.Chart
      properties:
        namespace: ai-sprint-mon
        repository_name: bitnami
        repository_url: "https://charts.bitnami.com/bitnami"
        name: influxdb
        values:
          auth.admin.username: { get_input: admin_username }
          auth.admin.password: { get_input: admin_password }
          auth.admin.token: { get_input: admin_token }
          auth.admin.org: { get_input: org_name }
          auth.admin.bucket: { get_input: bucket_name }
          influxdb.service.nodePorts.http: "8086"
      requirements:
        - host: front
        - dependency: lrms_front_end

  outputs:
    influxdb_endpoint:
      value: { concat: [ 'https://', get_attribute: [ front, public_address, 0 ], '/' ] }
    grafana_endpoint:
      value: { concat: [ 'https://', get_attribute: [ front, public_address, 0 ], '/grafana/' ] }
