tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/main/custom_types.yaml

description: >
  TOSCA for launching an HTCondor Virtual Cluster.


metadata:
  template_name: HTCondor
  template_version: "1.0.0"
  display_name: HTCondor virtual cluster
  icon: images/htcondor.png
  tabs:
    FE Node Features: fe_.*
    WNs Features: wn_.*
    HTCondor configuration: htcondor_.*
  childs:
    - pulsar.yml
    - dydns_egi_update_lrms.yml
    - proxy_host_cluster.yaml

topology_template:
  inputs:
    wn_num:
      type: integer
      description: Number of Worker Nodes in the cluster
      default: 1
      required: yes
    fe_cpus:
      type: integer
      description: Number of CPUs for the front-end node
      default: 1
      required: yes
      constraints:
        - valid_values: [ 1, 2, 4, 8, 16, 32, 64 ]
    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 1 GB
      required: yes
      constraints:
        - valid_values: [ 2 GB, 4 GB, 8 GB, 16 GB, 32 GB, 64 GB, 128 GB, 256 GB, 512 GB ]
    wn_cpus:
      type: integer
      description: Number of CPUs for the Worker Nodes
      default: 1
      required: yes
      constraints:
        - valid_values: [ 1, 2, 4, 8, 16, 32, 64 ]
    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the Worker Nodes
      default: 1 GB
      required: yes
      constraints:
        - valid_values: [ 2 GB, 4 GB, 8 GB, 16 GB, 32 GB, 64 GB, 128 GB, 256 GB, 512 GB ]

    fe_disk_size:
      type: scalar-unit.size
      description: Size of the disk to be attached to the FE instance (Set 0 if disk is not needed)
      default: 0 GB
      constraints:
        - valid_values: [ 0 GB, 10 GB, 20 GB, 50 GB, 100 GB, 200 GB, 500 GB, 1 TB, 2 TB ]
    fe_volume_id:
      type: string
      description: "Or URL of the disk to be attached to the FE instance (format: ost://api.cloud.ifca.es/<vol_id>"
      default: ""
    fe_mount_path:
      type: string
      description: "Path to mount the FE attached disk"
      default: "/home/data"

    wn_disk_size:
      type: scalar-unit.size
      description: Size of the disk to be attached to the WN instances (Set 0 if disk is not needed)
      default: 0 GB
      constraints:
        - valid_values: [ 0 GB, 10 GB, 20 GB, 50 GB, 100 GB, 200 GB, 500 GB, 1 TB, 2 TB ]
    wn_mount_path:
      type: string
      description: "Path to mount the WN attached disk"
      default: "/mnt/data"

    htcondor_password:
      type: string
      description: Store HTCondor credentials
      default: changeme
      required: yes

    htcondor_version:
      type: string
      description: Version of HTCondor to be installed
      default: "23.x"
      constraints:
        - valid_values: [ '10.0', '10.x', '23.0', '23.x' ]

  node_templates:

    lrms_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.HTCondor
      properties:
        wn_ips: { get_attribute: [ lrms_wn, private_address ] }
        htcondor_password: { get_input: htcondor_password }
        htcondor_version: { get_input: htcondor_version }
      requirements:
        - host: lrms_server

    lrms_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: htcondorserver
            network_name: PUBLIC
            ports:
              htcondor_port:
                protocol: tcp
                source: 9618
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
        os:
          properties:
            type: linux
            architecture: x86_64
      requirements:
        - local_storage:
            node: fe_block_storage
            relationship:
              type: AttachesTo
              properties:
                location: { get_input: fe_mount_path }

    fe_block_storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: fe_disk_size }
        volume_id: { get_input: fe_volume_id }

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.HTCondor
      properties:
        front_end_ip: { get_attribute: [ lrms_server, private_address, 0 ] }
        public_front_end_ip: { get_attribute: [ lrms_server, public_address, 0 ] }
        htcondor_password: { get_input: htcondor_password }
        htcondor_version: { get_input: htcondor_version }
      requirements:
        - host: lrms_wn

    lrms_wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: { get_input: wn_num }
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
        os:
          properties:
            type: linux
            architecture: x86_64
      requirements:
        - local_storage:
            node: wn_block_storage
            relationship:
              type: AttachesTo
              properties:
                location: { get_input: wn_mount_path }

    wn_block_storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: wn_disk_size }

  outputs:
    cluster_ip:
      value: { get_attribute: [ lrms_server, public_address, 0 ] }
    cluster_creds:
      value: { get_attribute: [ lrms_server, endpoint, credential, 0 ] }
    htcondor_version:
      value: { get_input: [ htcondor_version ] }
