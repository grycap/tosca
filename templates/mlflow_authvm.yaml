tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/main/custom_types.yaml

metadata:
  template_version: "1.0.0"
  template_name: MLFlow Auth VM
  display_name: Deploy MLFlow Auth GUI on a VM
  icon: images/mlflow.png
  tabs:
    MLFlow: mlflow_.*
  parents:
    - simple-node-disk.yml

description: Deploy MLFlow on a VM with the MLFlow Auth GUI.

topology_template:

  inputs:

    mlflow_admin_user:
      type: string
      description: MLFlow Admin server Username
      default: admin
      required: yes

    mlflow_admin_password:
      type: string
      description: MLFlow Admin server Password
      default: password
      required: yes

    mlflow_operator_pass:
      type: string
      description: MLFlow Operator Password
      default: 'operatorpass'
      required: no

    mlflow_oidc_auth:
      type: string
      description: MLFlow OIDC Authority
      default: 'https://aai-demo.egi.eu/auth/realms/egi'
      required: no

    mlflow_oidc_client_id:
      type: string
      description: MLFlow OIDC Client ID
      default: 'oidc-client'
      required: no

    mlflow_oidc_vo:
      type: string
      description: MLFlow OIDC VO name
      default: 'vo.ai4eosc.eu'
      required: no

    mlflow_dns_name:
      type: string
      description: MLFlow DNS name (leave empty to use mlflow.<node_ip>.nip.io)
      default: ''
      required: no

    mlflow_cert_email:
      type: string
      description: MLFlow LetsEncrypt certificate email
      default: 'johndoe@server.com'
      required: no

    # Restrict some simple-node-disk input values

    storage_size:
      type: scalar-unit.size
      description: Size of the extra HD added to the instance (Set 0 if disk is not needed)
      default: 20 GB
      constraints:
        - valid_values: [ 20 GB, 50 GB, 100 GB, 200 GB, 500 GB, 1 TB, 2 TB, 10 TB, 20 TB, 40 TB, 100 TB ]

    mount_path:
      type: string
      description: Path to mount the extra disk
      default: /opt/mlflow-auth-gui

  node_templates:

    mlflow:
      type: tosca.nodes.ec3.Application
      artifacts:
        docker_role:
          file: grycap.docker
          type: tosca.artifacts.AnsibleGalaxy.role
        docker_collection:
          file: community.docker,3.12.2
          type: tosca.artifacts.AnsibleGalaxy.collection
      capabilities:
        endpoint:
          properties:
            ports:
              https:
                protocol: tcp
                source: 443
              http:
                protocol: tcp
                source: 80
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/main/artifacts/mlflow_auth_compose.yml
            inputs:
              public_ip_address:
                get_attribute: [ simple_node, public_address, 0 ]
              mlflow_admin_user:
                get_input: mlflow_admin_user
              mlflow_admin_password:
                get_input: mlflow_admin_password
              mlflow_cert_email:
                get_input: mlflow_cert_email
              mlflow_dns_name:
                get_input: mlflow_dns_name
              mlflow_oidc_auth:
                get_input: mlflow_oidc_auth
              mlflow_oidc_client_id:
                get_input: mlflow_oidc_client_id
              mlflow_oidc_vo:
                get_input: mlflow_oidc_vo
              mlflow_operator_pass:
                get_input: mlflow_operator_pass

      requirements:
        - host: simple_node

  outputs:
    mlflow_nip_endpoint:
      value: { concat: [ 'https://mlflow.', get_attribute: [ simple_node, public_address, 0 ], '.nip.io/signup' ] }
    mlflow_dns_endpoint:
      value: { concat: [ 'https://', get_input: mlflow_dns_name, '/signup' ] }
