---
- name: Install Galaxy
  hosts: localhost
  connection: local
  vars:
    NAMESPACE: galaxy
    AFFINITY:
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/instance
                      operator: In
                      values:
                        - galaxy
                        - postgres-operator
                        - rabbitmq-operator
    admin_users: "{{ galaxy_admin_users | default('admin@galaxy.com') }}"
    brand: "{{ galaxy_brand | default('IM Deployed Galaxy K8s Cluster') }}"
    max_mem: "{{ galaxy_max_mem | default(0) }}"
    max_cores: "{{ galaxy_max_cores | default(0) }}"
  tasks:

    - name: "Check if postgres-operator is already deployed"
      command: helm status postgres-operator -n {{ NAMESPACE }}
      register: deployed
      failed_when: deployed.rc != 0 and deployed.rc != 1
      changed_when: false
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - when: deployed.rc == 1
      block:

        - name: Create postgres-operator helm chart values file
          copy:
            dest: /opt/postgres_values.yaml
            mode: '644'
            content: "{{ AFFINITY | to_yaml }}"

        - name: Add helm repo cloudnative-pg
          command: helm repo add cloudnative-pg https://cloudnative-pg.github.io/charts/
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

        - name: Deploy postgres-operator
          command: helm install -n {{ NAMESPACE }} --create-namespace postgres-operator cloudnative-pg/cloudnative-pg --version 0.23.2 -f /opt/postgres_values.yaml --wait
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

    - name: "Check if rabbitmq-operator is already deployed"
      command: helm status rabbitmq-operator -n {{ NAMESPACE }}
      register: deployed
      failed_when: deployed.rc != 0 and deployed.rc != 1
      changed_when: false
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - when: deployed.rc == 1
      block:

        - name: Create rabbitmq-operator helm chart values file
          copy:
            dest: /opt/rabbitmq_values.yaml
            mode: '644'
            content: |
              clusterOperator:
                {{ AFFINITY | to_yaml(indent=4) }}
              msgTopologyOperator:
                {{ AFFINITY | to_yaml(indent=4) }}

        - name: Add helm repo bitnami
          command: helm repo add bitnami https://charts.bitnami.com/bitnami
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

        - name: Deploy rabbitmq-operator
          command: helm install -n {{ NAMESPACE }} --create-namespace rabbitmq-operator bitnami/rabbitmq-cluster-operator --version  2.6.12 -f /opt/rabbitmq_values.yaml  --wait
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

    - name: "Check if galaxy-cvmfs is already deployed"
      command: helm status galaxy-cvmfs -n {{ NAMESPACE }}
      register: deployed
      failed_when: deployed.rc != 0 and deployed.rc != 1
      changed_when: false
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - when: deployed.rc == 1
      block:

        - name: Create galaxy helm chart values file
          copy:
            dest: /opt/galaxy-cvmfs-csi_values.yaml
            mode: '644'
            content: |
              storageClassName: galaxy-cvmfs
              cvmfscsi:
                cache:
                  alien:
                    pvc:
                      storageClass: managed-nfs-storage
                      name: cvmfs-alien-cache
                # try to pack all the pods in the same nodes
                controllerplugin:
                  {{ AFFINITY | to_yaml(indent=4) }}
                nodeplugin:
                  {{ AFFINITY | to_yaml(indent=4) }}

        - name: Add helm repo galaxy
          command: helm repo add galaxy https://raw.githubusercontent.com/CloudVE/helm-charts/master/
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

        - name: Deploy Galaxy CVMFS CSI
          command: helm install --create-namespace -n {{ NAMESPACE }} galaxy-cvmfs galaxy/galaxy-cvmfs-csi --wait -f  /opt/galaxy-cvmfs-csi_values.yaml --version 2.2.0  --wait
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

    - name: "Check if galaxy is already deployed"
      command: helm status galaxy -n {{ NAMESPACE }}
      register: deployed
      changed_when: false
      failed_when: deployed.rc != 0 and deployed.rc != 1
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - when: deployed.rc == 1
      block:

        - name: Remove GiB from max_mem
          set_fact:
            max_mem: "{{ max_mem[:-3] | float - 1 }}"
          when: max_mem and "GiB" in max_mem

        - name: Create galaxy helm chart values file
          copy:
            dest: /opt/galaxy_values.yaml
            mode: '644'
            content: |
              persistence:
                accessMode: ReadWriteMany
              s3csi:
                deploy: false
              cvmfs:
                deploy: false
              postgresql:
                deploy: false
              rabbitmq:
                deploy: false
              configs:
                galaxy.yml:
                  galaxy:
                    admin_users: {{ admin_users }}
                    brand: {{ brand }}
              jobs:
                rules:
                  tpv_rules_local.yml:
                    destinations:
                      k8s:
                        runner: k8s
                        {{ 'max_cores: ' ~ (max_cores | int - 1) if max_cores | int > 0 else '# no max_cores' }}
                        {{ 'max_mem: ' ~ max_mem if max_mem | int > 0 else '# no max_mem' }}
              # to fix https://github.com/galaxyproject/galaxy-helm/issues/513
              tusd:
                ingress:
                  annotations:
                    nginx.ingress.kubernetes.io/connection-proxy-header: "keep-alive"
                    nginx.ingress.kubernetes.io/enable-websockets: "true"
              # try to pack all the pods in the same nodes
              {{ AFFINITY | to_yaml }}

        - name: Add helm repo galaxy
          command: helm repo add galaxy https://raw.githubusercontent.com/CloudVE/helm-charts/master/
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

        - name: Deploy Galaxy
          command: helm install --create-namespace -n {{ NAMESPACE }} galaxy galaxy/galaxy --timeout 10m -f /opt/galaxy_values.yaml --version 6.1.0
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

        - name: Wait Galaxy Web to be available
          command: kubectl -n {{ NAMESPACE }} wait --for=condition=Available deployment/galaxy-web --timeout=600s
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf
          ignore_errors: true

        - name: Delete Pending stuck pods (CreateContainerConfigError)
          shell: kubectl get pods -n {{ NAMESPACE }} -o jsonpath='{range .items[?(@.status.containerStatuses[0].state.waiting.reason=="CreateContainerConfigError")]}{.metadata.namespace} {.metadata.name}{"\n"}{end}' | xargs -r -n2 sh -c 'kubectl delete pod $1 -n $0'
          register: error_pods
          changed_when: error_pods.stdout_lines | length > 1
          retries: 5
          delay: 120
          until: error_pods.stdout_lines | length < 1
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf
