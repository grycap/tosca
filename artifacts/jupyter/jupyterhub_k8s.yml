---
- hosts: localhost
  connection: local
  vars:
    kubeconfig_path: '/etc/kubernetes/admin.conf'
    jup_auth_class: "{{ authenticator_class | default('dummy') }}"
    jup_dummy_pass: "{{ dummy_pass | default('dummy_pass') }}"
    jup_admin_user: "{{ admin_user | default('admin') }}"
    dns_name: "{{ kube_public_dns_name | default('') }}"
    jup_storage_size: "{{ storage_size | default('10Gi') }}"
    default_profile_list:
      - display_name: '1CPU 1GB environment'
        description: '1CPU 1GB environment'
        default: true
      - display_name: '2CPU 2GB environment'
        description: '2CPU 2GB environment'
        kubespawner_override:
          cpu_limit: 2
          mem_limit: '2G'
          cpu_guarantee: 2
          mem_guarantee': '2G'
      - display_name: '2CPU 2GB ItwinAI environment'
        description: '2CPU 2GB ItwinAI environment'
        kubespawner_override:
          image: 'grycap/jupyterhub-k8s-itwinai'
          cpu_limit: 2
          mem_limit: '2G'
          cpu_guarantee: 2
          mem_guarantee': '2G'
      - display_name: '2CPU 4GB 1GPU environment'
        description: '2CPU 4GB 1GPU environment (only use it if some of the K8s WNs has GPU support)'
        kubespawner_override:
          image: 'grycap/k8s-singleuser-sample-gpu:latest'
          cpu_limit: 2
          mem_limit: '4G'
          cpu_guarantee: 2
          mem_guarantee': '4G'
          extra_resource_limits:
            nvidia.com/gpu: 1
          extra_resource_guarantees:
            nvidia.com/gpu: 1
  tasks:
    - name: Add jupyterhub helm repo
      command: helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: "Update helm repositories"
      command: helm repo update
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: "Set ingress values"
      set_fact:
        ingress: |
            ingress:
              annotations: { kubernetes.io/ingress.class: nginx }
              enabled: true
      when: dns_name == ''

    - name: "Set ingress values with TLS"
      set_fact:
        ingress: |
            ingress:
              annotations: { kubernetes.io/ingress.class: nginx, cert-manager.io/cluster-issuer: "letsencrypt-prod" }
              enabled: true
              hosts: [{{ dns_name }}]
              tls:
                - hosts: [{{ dns_name }}]
                  secretName: {{ dns_name }}
      when: dns_name != ''

    - name: Create Jupyter PVC yaml file
      copy:
        dest: /opt/jupyter_data_pvc.yaml
        mode: '644'
        content: |
          ---
          apiVersion: v1
          kind: Namespace
          metadata:
            name: jupyter
          ---
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            namespace: jupyter
            name: claim-data
          spec:
            accessModes:
              - ReadWriteMany
            resources:
              requests:
                storage: {{ jup_storage_size }}

    - command: kubectl apply -f /opt/jupyter_data_pvc.yaml
      environment:
        KUBECONFIG: "/etc/kubernetes/admin.conf"

    - name: Set profile list
      set_fact:
        jup_profile_list: "{{ profile_list | default(default_profile_list) }}"

    - name: "Create values file"
      copy:
        dest: /tmp/config.yaml
        mode: '644'
        content: |
            # https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/main/jupyterhub/values.yaml
            hub:
              baseUrl: /jupyterhub/
              config:
                Authenticator:
                  admin_users:
                    - {{ jup_admin_user }}
                DummyAuthenticator:
                  password: {{ jup_dummy_pass }}
                JupyterHub:
                  admin_access: true
                  authenticator_class: {{ jup_auth_class }}
            proxy:
              service:
                type: ClusterIP
            {{ ingress }}
            singleuser:
              image:
                name: jupyterhub/k8s-singleuser-sample
                tag: 2.0.0
              cpu:
                limit: 1
                guarantee: 1
              memory:
                limit: 1G
                guarantee: 1G
              storage:
                extraVolumes:
                  - name: vol-data
                    persistentVolumeClaim:
                      claimName: claim-data
                extraVolumeMounts:
                  - name: vol-data
                    mountPath: /home/jovyan/data
                    readOnly: True
              profileList: {{ jup_profile_list }}

    - name: Install (or upgrade) the chart
      command: helm upgrade --install jupyterhub jupyterhub/jupyterhub --namespace jupyter --create-namespace --values /tmp/config.yaml --timeout 10m
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
